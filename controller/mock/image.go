// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cecobask/hipeople-coding-challenge/controller (interfaces: ImageController)

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	util "github.com/cecobask/hipeople-coding-challenge/util"
	gomock "github.com/golang/mock/gomock"
)

// MockImageController is a mock of ImageController interface.
type MockImageController struct {
	ctrl     *gomock.Controller
	recorder *MockImageControllerMockRecorder
}

// MockImageControllerMockRecorder is the mock recorder for MockImageController.
type MockImageControllerMockRecorder struct {
	mock *MockImageController
}

// NewMockImageController creates a new mock instance.
func NewMockImageController(ctrl *gomock.Controller) *MockImageController {
	mock := &MockImageController{ctrl: ctrl}
	mock.recorder = &MockImageControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageController) EXPECT() *MockImageControllerMockRecorder {
	return m.recorder
}

// GetByID mocks base method.
func (m *MockImageController) GetByID(arg0 *http.Request) *util.RequestError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].(*util.RequestError)
	return ret0
}

// GetByID indicates an expected call of GetByID.
func (mr *MockImageControllerMockRecorder) GetByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockImageController)(nil).GetByID), arg0)
}

// List mocks base method.
func (m *MockImageController) List() (string, *util.RequestError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*util.RequestError)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockImageControllerMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockImageController)(nil).List))
}

// Upload mocks base method.
func (m *MockImageController) Upload(arg0 *http.Request) (string, *util.RequestError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Upload", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*util.RequestError)
	return ret0, ret1
}

// Upload indicates an expected call of Upload.
func (mr *MockImageControllerMockRecorder) Upload(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Upload", reflect.TypeOf((*MockImageController)(nil).Upload), arg0)
}
